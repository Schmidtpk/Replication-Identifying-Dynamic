),
label_long=paste0(model," , AUC = ",paste(round(AUC,2))),
label_AUC=paste0("AUC = ",paste(round(AUC,2)))) -> data.labels
# plot on a single plot with AUC in labels
p.rocI <- pROC::ggroc(roc.list) +
scale_color_discrete(labels=data.labels$label_long)+
geom_abline(aes(slope = 1, intercept=1), color="darkgrey",linetype=2)+
theme(legend.position = c(0.65, 0.2),
legend.title = element_blank(),
legend.text=element_text(size=9),
legend.background = element_blank())+
xlab("Specificity")+
ylab("Sensitivity")
p.rocI
ggsave("./analysis/plots/ggrocA5.pdf",width = 6.5,height=6.5)
library(tidyverse)
library(latex2exp)
library(ReplicationIdentifyingDynamic)
theme_set(theme_bw())
df <- readRDS("simulations/resultssim/loads.rds")
df.person <- readRDS("simulations/resultssim/persons.rds")
df.s <- readRDS("simulations/resultssim/states.rds")
# + mixing ------------------------------------------------------------------
df %>%
filter(o==1)%>%
group_by(r,n,prop,rel,nqp,q,model)%>%
summarise(maxRhat = max(Rhat))%>%
group_by(prop,rel,nqp,q,model)%>%
summarise(converge = 1-mean(maxRhat >1.2))%>%
mutate(model = factor(model,levels = c('cfa','stat','dyn')))%>%
ggplot(aes(x=model,y=converge,fill=model))+
geom_bar(stat = "identity")+
facet_grid(rel~prop,labeller = as_labeller(c('high' = 'high reliability',
'low' = 'low reliability',
'0.1' = '10%',
'0.2' = '20%',
'0.4' = '40%',
'1' = '100%')))+
geom_hline(yintercept = 1,alpha=.7)+
ylab('ratio of converged model runs')
ggsave("./simulations/plots/mixing_ran1.pdf",width = 6.5,height=3)
df %>%
filter(o==2)%>%
group_by(r,n,prop,rel,nqp,q,model)%>%
summarise(maxRhat = max(Rhat))%>%
group_by(prop,rel,nqp,q,model)%>%
summarise(converge = 1-mean(maxRhat >1.2))%>%
mutate(model = factor(model,levels = c('cfa','stat','dyn')))%>%
ggplot(aes(x=model,y=converge,fill=model))+
geom_bar(stat = "identity")+
facet_grid(rel~prop,labeller = as_labeller(c('high' = 'high reliability',
'low' = 'low reliability',
'0.1' = '10%',
'0.2' = '20%',
'0.4' = '40%',
'1' = '100%')))+
geom_hline(yintercept = 1,alpha=.7)+
ylab('ratio of converged model runs')
ggsave("./simulations/plots/mixing_ran2.pdf",width = 6.5,height=3)
# loads -------------------------------------------------------------------
df%>%
group_by(n,prop,o,rel,model)%>%
summarise(load = mean(mean))%>%
mutate(load0 = ifelse(rel=='high',0.8,0.5))%>%
ggplot(aes(x=factor(scales::percent(prop),levels = c('10%','20%','40%','100%')),linetype=factor(n),color=model,y=load,group = interaction(n,model)))+
geom_hline(aes(yintercept=load0))+
geom_line()+
geom_point()+
facet_grid(o~rel,labeller = as_labeller(c('high' = 'high reliability',
'low' = 'low reliability',
'1'='individual sequence',
'2'='same sequence')))+
scale_y_continuous(limits=c(0,1),breaks = c(0,.2,.4,.6,.8,1))+
scale_linetype_discrete(name='sample size')+
xlab('dropout probability')+
ylab(TeX('load $\\lambda$'))
ggsave("./simulations/plots/loads_ran2_overp.pdf",width = 6.5,height=4)
df%>%
filter(o==2)%>%
group_by(n,prop,rel,t,model)%>%
summarise(load = mean(mean))%>%
mutate(load0 = ifelse(rel=='high',0.8,0.5))%>%
ggplot(aes(x=t,linetype=factor(n),color=model,y=load,group = interaction(n,model)))+
geom_line()+
geom_hline(aes(yintercept = load0))+
facet_grid(rel~prop,labeller = as_labeller(c('0.1' = '10%',
'0.2' = '20%',
'0.4' = '40%',
'1' = '100%',
'high' = 'high reliability',
'low' = 'low reliability')))+
scale_y_continuous(limits=c(0,1),breaks = c(0,.2,.4,.6,.8,1))+
scale_linetype_discrete(name='sample size')+
xlab('item number')+
ylab(TeX('load $\\lambda$'))
ggsave("./simulations/plots/loads_ran2.pdf",width = 6.5,height=3)
# attention ---------------------------------------------------------------
df.s%>%
filter(o==1)%>%
left_join(df.person)%>%
mutate(trel = ifelse(is.na(when),t-60,t-when),
cnr = is.na(cnr))%>%
group_by(prop,rel,cnr,trel)%>%
summarise(mean = 1-mean(mean))%>%
ggplot(aes(x=trel,y=mean, color = factor(cnr), group=interaction(prop,rel,cnr)))+
geom_vline(xintercept = 0,col='red',linetype=2,size=1)+
geom_hline(yintercept = c(0,1),alpha=.5)+
geom_line(size=1,alpha=1)+
facet_grid(rel~prop,labeller = as_labeller(c('high' = 'high reliability',
'low' = 'low reliability',
'0.1' = '10%',
'0.2' = '20%',
'0.4' = '40%',
'1' = '100%')))+
scale_color_discrete(name='attention')+
ylab('Prob. of attention')+
xlab('item number relative to treatment')+
theme_bw()
ggsave("./simulations/plots/sim_att_ran1.pdf",width = 6.5,height=3)
df.s%>%
filter(o==2)%>%
left_join(df.person)%>%
mutate(trel = ifelse(is.na(when),t-60,t-when),
cnr = is.na(cnr))%>%
group_by(prop,rel,cnr,trel)%>%
summarise(mean = 1-mean(mean))%>%
ggplot(aes(x=trel,y=mean, color = factor(cnr), group=interaction(prop,rel,cnr)))+
geom_vline(xintercept = 0,col='red',linetype=2,size=1)+
geom_hline(yintercept = c(0,1),alpha=.5)+
geom_line(size=1,alpha=1)+
facet_grid(rel~prop,labeller = as_labeller(c('high' = 'high reliability',
'low' = 'low reliability',
'0.1' = '10%',
'0.2' = '20%',
'0.4' = '40%',
'1' = '100%')))+
scale_color_discrete(name='attention')+
ylab('Prob. of attention')+
xlab('item number relative to treatment')+
theme_bw()
ggsave("./simulations/plots/sim_att_ran2.pdf",width = 6.5,height=3)
ggsave("./simulations/plots/sim_att_ran2.png",width = 6.5,height=3)
library(latex2exp)
library(ReplicationIdentifyingDynamic)
library(tidyverse)
add_sum_names <- function(res){
res$name <- gsub("\\[.*","",rownames(res))
res$variable <- rownames(res)
return(res)
}
theme_set(theme_bw())
library(tidyverse)
library(latex2exp)
library(ReplicationIdentifyingDynamic)
theme_set(theme_bw())
df <- readRDS("simulations/resultssim/loads.rds")
df.person <- readRDS("simulations/resultssim/persons.rds")
df.s <- readRDS("simulations/resultssim/states.rds")
df %>%
filter(o==1)%>%
group_by(r,n,prop,rel,nqp,q,model)%>%
summarise(maxRhat = max(Rhat))%>%
group_by(prop,rel,nqp,q,model)%>%
summarise(converge = 1-mean(maxRhat >1.2))%>%
mutate(model = factor(model,levels = c('cfa','stat','dyn')))%>%
ggplot(aes(x=model,y=converge,fill=model))+
geom_bar(stat = "identity")+
facet_grid(rel~prop,labeller = as_labeller(c('high' = 'high reliability',
'low' = 'low reliability',
'0.1' = '10%',
'0.2' = '20%',
'0.4' = '40%',
'1' = '100%')))+
geom_hline(yintercept = 1,alpha=.7)+
ylab('ratio of converged model runs')
df.s%>%
filter(o==1)%>%
left_join(df.person)%>%
mutate(trel = ifelse(is.na(when),t-60,t-when),
cnr = is.na(cnr))%>%
group_by(prop,rel,cnr,trel)%>%
summarise(mean = 1-mean(mean))%>%
ggplot(aes(x=trel,y=mean, color = factor(cnr), group=interaction(prop,rel,cnr)))+
geom_vline(xintercept = 0,col='red',linetype=2,size=1)+
geom_hline(yintercept = c(0,1),alpha=.5)+
geom_line(size=1,alpha=1)+
facet_grid(rel~prop,labeller = as_labeller(c('high' = 'high reliability',
'low' = 'low reliability',
'0.1' = '10%',
'0.2' = '20%',
'0.4' = '40%',
'1' = '100%')))+
scale_color_discrete(name='attention')+
ylab('Prob. of attention')+
xlab('item number relative to treatment')+
theme_bw()
df.s%>%
filter(o==2)%>%
left_join(df.person)%>%
mutate(trel = ifelse(is.na(when),t-60,t-when),
cnr = is.na(cnr))%>%
group_by(prop,rel,cnr,trel)%>%
summarise(mean = 1-mean(mean))%>%
ggplot(aes(x=trel,y=mean, color = factor(cnr), group=interaction(prop,rel,cnr)))+
geom_vline(xintercept = 0,col='red',linetype=2,size=1)+
geom_hline(yintercept = c(0,1),alpha=.5)+
geom_line(size=1,alpha=1)+
facet_grid(rel~prop,labeller = as_labeller(c('high' = 'high reliability',
'low' = 'low reliability',
'0.1' = '10%',
'0.2' = '20%',
'0.4' = '40%',
'1' = '100%')))+
scale_color_discrete(name='attention')+
ylab('Prob. of attention')+
xlab('item number relative to treatment')+
theme_bw()
library(ggplot2)
library(cnrmturk)
library(verification)
library(usethis)
library(rjags)
library(loo)
# Import fits
# # # # # # # # # # # #
path <-  "../analysis/save/final_fits/"
list.files(path)
# CFA cutoff model
CFC <- readRDS("../analysis/save/final_fits/CFA_cutoffmod_14_12_22.RDS")
# Import fits
# # # # # # # # # # # #
path <-  "../analysis/save/final_fits/"
list.files(path)
# CFA cutoff model
CFC <- readRDS("../analysis/save/final_fits/CFA_cutoffmod_14_12_22.RDS")
# BS model
BS <- readRDS("../analysis/save/final_fits/CFA_BS_fit.RDS")
# CFA model
CFA <- readRDS("../analysis/save/final_fits/CFA_full_loglik.RDS")
# Adding dynamic model
DYN <- readRDS("../analysis/submission/save/06_07_22dyn4.RDS")
getwd()
# Import fits
# # # # # # # # # # # #
path <-  "/analysis/save/final_fits/"
list.files(path)
# Import fits
# # # # # # # # # # # #
path <-  "./analysis/save/final_fits/"
list.files(path)
# CFA cutoff model
CFC <- readRDS("../analysis/save/final_fits/CFA_cutoffmod_14_12_22.RDS")
library(ggplot2)
library(cnrmturk)
library(verification)
library(usethis)
library(rjags)
library(loo)
# Import fits
# # # # # # # # # # # #
path <-  "./analysis/save/final_fits/"
list.files(path)
# CFA cutoff model
CFC <- readRDS("./analysis/save/final_fits/CFA_cutoffmod_14_12_22.RDS")
# BS model
BS <- readRDS("./analysis/save/final_fits/CFA_BS_fit.RDS")
# CFA model
CFA <- readRDS("./analysis/save/final_fits/CFA_full_loglik.RDS")
# Adding dynamic model
DYN <- readRDS("./analysis/submission/save/06_07_22dyn4.RDS")
# Adding dynamic model
DYN <- readRDS("./analysis/submission/save/06_07_22dyn4.RDS")
getwd()
06_07_22dyn4 <- readRDS("C:/Users/patricks/Dropbox/Data/R packages/ReplicationIdentifyingDynamic/analysis/save/06_07_22dyn4.RDS")
# Adding dynamic model
DYN <- readRDS("./analysis/save/06_07_22dyn4.RDS")
# Static model
STA <- readRDS("./analysis/save/13_07_22static4beta.RDS")
# Multiple Hurdle model
MH <- readRDS("./analysis/save/final_fits/CFA_MH_08_23_23.RDS")
library(ggplot2)
library(cnrmturk)
library(verification)
library(usethis)
library(rjags)
library(loo)
# Import fits
# # # # # # # # # # # #
path <-  "./analysis/save/final_fits/"
list.files(path)
# CFA cutoff model
CFC <- readRDS("./analysis/save/final_fits/CFA_cutoffmod_14_12_22.RDS")
# BS model
BS <- readRDS("./analysis/save/final_fits/CFA_BS_fit.RDS")
# CFA model
CFA <- readRDS("./analysis/save/final_fits/CFA_full_loglik.RDS")
# Adding dynamic model
DYN <- readRDS("./analysis/save/06_07_22dyn4.RDS")
# Static model
STA <- readRDS("./analysis/save/13_07_22static4beta.RDS")
# Multiple Hurdle model
MH <- readRDS("./analysis/save/final_fits/CFA_MH_08_23_23.RDS")
# Factor correlation/covariance index
xx <- expand.grid(1:10,1:10)
index2 <- xx[ xx[,1] != xx[,2],]
# Factor Names
Fnames <- c("ANX","ANG","FRE","GREG","IMG","ART","TRST","ALT","ORD","SED")
yy <- expand.grid(Fnames,Fnames)
index2n <- yy[ yy[,1] != yy[,2],]
# Item names
# Using factor here because of the item10 before item2 issue
Inames <- factor(colnames(STA$input$y),
levels = colnames(STA$input$y))
index <- 1:100
Namez <- names(CFC$fit[paste0("lySt[",index,"]"),"mean"])
n = length(CFC$fit[paste0("lySt[",index,"]"),"mean"])
CFCLY <- data.frame(Inames,
LYS = CFC$fit[paste0("lySt[",index,"]"),"mean"],
SD = CFC$fit[paste0("lySt[",index,"]"),"sd"],
LYS5 = CFC$fit[paste0("lySt[",index,"]"),"2.5%"],
LYS9 = CFC$fit[paste0("lySt[",index,"]"),"97.5%"],
LYS_Rhat = CFC$fit[paste0("lySt[",index,"]"),"Rhat"],
LYS_ESS = CFC$fit[paste0("lySt[",index,"]"),"n.eff"],
Inames,
rep("Cutoff",n),
rep("Cutoff",n))
colnames(CFCLY) <- c("Item","Ly","SD",
"p2.5","p97.5","Rhat",
"ESS","Iname","CDcut","percentile")
Dlyz <- data.frame(Namez,
DYN$sum[paste0("lySt[",index,"]"),"mean"],
DYN$sum[paste0("lySt[",index,"]"),"sd"],
DYN$sum[paste0("lySt[",index,"]"),"2.5%"],
DYN$sum[paste0("lySt[",index,"]"),"97.5%"],
DYN$sum[paste0("lySt[",index,"]"),"Rhat"],
DYN$sum[paste0("lySt[",index,"]"),"n.eff"],
Inames,
rep(200,100),
rep("DYN",100))
colnames(Dlyz) <- c("Item","Ly","SD",
"p2.5","p97.5","Rhat",
"ESS","Iname","CDcut","percentile")
# Static model
Slyz <- data.frame(Namez,
STA$sum[paste0("lySt[",index,"]"),"mean"],
STA$sum[paste0("lySt[",index,"]"),"sd"],
STA$sum[paste0("lySt[",index,"]"),"2.5%"],
STA$sum[paste0("lySt[",index,"]"),"97.5%"],
STA$sum[paste0("lySt[",index,"]"),"Rhat"],
STA$sum[paste0("lySt[",index,"]"),"n.eff"],
Inames,
rep(200,100),
rep("STA",100))
colnames(Slyz)<-colnames(Dlyz) <- c("Item",
"Ly",
"SD",
"p2.5",
"p97.5",
"Rhat",
"ESS",
"Iname",
"CDcut",
"percentile")
BSLY <- data.frame(Inames,
LYS = BS$fit[paste0("lySt[",index,"]"),"mean"],
SD = BS$fit[paste0("lySt[",index,"]"),"sd"],
LYS5 = BS$fit[paste0("lySt[",index,"]"),"2.5%"],
LYS9 = BS$fit[paste0("lySt[",index,"]"),"97.5%"],
LYS_Rhat = BS$fit[paste0("lySt[",index,"]"),"Rhat"],
LYS_ESS = BS$fit[paste0("lySt[",index,"]"),"n.eff"],
Inames,
rep("BS",n),
rep("BS",n))
colnames(BSLY) <- c("Item","Ly","SD",
"p2.5","p97.5","Rhat",
"ESS","Iname","CDcut","percentile")
CFALY <- data.frame(Inames,
LYS = CFA$fit[paste0("lySt[",index,"]"),"mean"],
SD = CFA$fit[paste0("lySt[",index,"]"),"sd"],
LYS5 = CFA$fit[paste0("lySt[",index,"]"),"2.5%"],
LYS9 = CFA$fit[paste0("lySt[",index,"]"),"97.5%"],
LYS_Rhat = CFA$fit[paste0("lySt[",index,"]"),"Rhat"],
LYS_ESS = CFA$fit[paste0("lySt[",index,"]"),"n.eff"],
Inames,
rep("CFA",n),
rep("CFA",n))
colnames(CFALY) <- c("Item","Ly","SD",
"p2.5","p97.5","Rhat",
"ESS","Iname","CDcut","percentile")
MHALY <- data.frame(Inames,
LYS = MH$fit[paste0("lySt[",index,"]"),"mean"],
SD = MH$fit[paste0("lySt[",index,"]"),"sd"],
LYS5 = MH$fit[paste0("lySt[",index,"]"),"2.5%"],
LYS9 = MH$fit[paste0("lySt[",index,"]"),"97.5%"],
LYS_Rhat = MH$fit[paste0("lySt[",index,"]"),"Rhat"],
LYS_ESS = MH$fit[paste0("lySt[",index,"]"),"n.eff"],
Inames,
rep("MH",n),
rep("MH",n))
colnames(MHALY) <- c("Item","Ly","SD",
"p2.5","p97.5","Rhat",
"ESS","Iname","CDcut","percentile")
Pdat <- rbind(Slyz,Dlyz,CFALY,BSLY,CFCLY,MHALY)
Range <-function(x){ return(range(x)[2] - range(x)[1])}
tab1 <- data.frame(
aggregate(x = Pdat$Ly,list(Pdat$percentile),mean)$Group.1,
paste(
round(aggregate(x = Pdat$Ly,list(Pdat$percentile),mean)$x,2),
paste0("(",as.character(round(aggregate(x = Pdat$Ly,list(Pdat$percentile),sd)$x,2)),")")
),
paste(
round(aggregate(x = Pdat$p2.5,list(Pdat$percentile),mean)$x,2),
paste0("(",as.character(round(aggregate(x = Pdat$p2.5,list(Pdat$percentile),sd)$x,2)),")")
),
paste(
round(aggregate(x = Pdat$p97.5,list(Pdat$percentile),mean)$x,2),
paste0("(",as.character(round(aggregate(x = Pdat$p97.5,list(Pdat$percentile),sd)$x,2)),")")
),
paste(
round(aggregate(x = Pdat$Rhat,list(Pdat$percentile),mean)$x,3),
paste0("(",as.character(round(aggregate(x = Pdat$Rhat,list(Pdat$percentile),Range)$x,2)),")")
),
paste(
round(aggregate(x = Pdat$ESS,list(Pdat$percentile),mean)$x,0),
paste0("(",as.character(round(aggregate(x = Pdat$ESS,list(Pdat$percentile),Range)$x,0)),")")
))
library(kableExtra)
library(ggplot2)
colnames(tab1) <-  c("Model",
"Mean LY (SD)",
"Mean 2.5% (SD)",
"Mean 97.5% (SD)",
"Mean Rhat (Range)",
"Mean ESS (Range)")
ggplot() +
geom_histogram(aes(x=Pdat$Rhat))
# Average loading and diagnostics by model
kable(x = tab1,
format = "latex",
booktabs = TRUE,
align = c("l","c","c","c","c","c"))
library(reshape2)
Pdat2 <- data.frame("Ly.Dyn" = Pdat$Ly[Pdat$percentile == "DYN"],
"Ly.Sta" = Pdat$Ly[Pdat$percentile == "STA"],
"Ly.Bogus" = Pdat$Ly[Pdat$percentile == "BS"],
"Ly.CFA" = Pdat$Ly[Pdat$percentile == "CFA"],
"Ly.Cut" = Pdat$Ly[Pdat$percentile == "Cutoff"],
"Ly.MH" = Pdat$Ly[Pdat$percentile == "MH"])
p1 <- ggplot(data = Pdat2) +
geom_point(aes(x = Ly.Sta,y = Ly.Dyn), alpha = 0.45) +
geom_segment(aes(x = 0.25,y = 0.25, yend = 1, xend = 1))+ theme_bw() +
xlab("Static Model Loadings") + ylab("Dynamic Model Loadings")
p2 <- ggplot(data = Pdat2) +
geom_point(aes(x = Ly.CFA,y = Ly.Dyn), alpha = 0.45) +
geom_segment(aes(x = 0.25,y = 0.25, yend = 1, xend = 1))+ theme_bw() +
xlab("CFA Model Loadings") + ylab("Dynamic Model Loadings")
p3 <- ggplot(data = Pdat2) +
geom_point(aes(x = Ly.Bogus, y = Ly.Dyn), alpha = 0.45) +
geom_segment(aes(x = 0.25,y = 0.25, yend = 1, xend = 1))+ theme_bw() +
xlab("Bogus Strategy Loadings") + ylab("Dynamic Model Loadings")
p4 <- ggplot(data = Pdat2) +
geom_point(aes(x = Ly.Cut, y = Ly.Dyn), alpha = 0.45) +
geom_segment(aes(x = 0.25,y = 0.25, yend = 1, xend = 1))+ theme_bw() +
xlab("Cutoff Strategy Loadings") + ylab("Dynamic Model Loadings")
p5 <- ggplot(data = Pdat2) +
geom_point(aes(x = Ly.Cut, y = Ly.Dyn), alpha = 0.45) +
geom_segment(aes(x = 0,y = 0, yend = 1, xend = 1))+ theme_bw() +
xlab("Multiple Hurdle Strategy Loadings") + ylab("Dynamic Model Loadings")
pc <- gridExtra::grid.arrange(p1,p2,p3,p4,p5, nrow = 3)
# Again for SDS
Pdat2 <- data.frame("Ly.Dyn" = Pdat$SD[Pdat$percentile == "DYN"],
"Ly.Sta" = Pdat$SD[Pdat$percentile == "STA"],
"Ly.Bogus" = Pdat$SD[Pdat$percentile == "BS"],
"Ly.CFA" = Pdat$SD[Pdat$percentile == "CFA"],
"Ly.Cut" = Pdat$SD[Pdat$percentile == "Cutoff"],
"Ly.MH" = Pdat$SD[Pdat$percentile == "MH"])
p1 <- ggplot(data = Pdat2) +
geom_point(aes(x = Ly.Sta,y = Ly.Dyn), alpha = 0.45) +
geom_segment(aes(x = 0,y = 0, yend = 0.1, xend = 0.1))+ theme_bw() +
xlab("Static Model Loading SD") + ylab("Dynamic Model Loadings SD")
p2 <- ggplot(data = Pdat2) +
geom_point(aes(x = Ly.CFA,y = Ly.Dyn), alpha = 0.45) +
geom_segment(aes(x = 0,y = 0, yend = 0.1, xend = 0.1))+ theme_bw() +
xlab("CFA Model Loadings SD") + ylab("Dynamic Model Loadings SD")
p3 <- ggplot(data = Pdat2) +
geom_point(aes(x = Ly.Bogus, y = Ly.Dyn), alpha = 0.45) +
geom_segment(aes(x = 0,y = 0, yend = 0.1, xend = 0.1))+ theme_bw() +
xlab("Bogus Strategy Loadings SD") + ylab("Dynamic Model Loadings SD")
p4 <- ggplot(data = Pdat2) +
geom_point(aes(x = Ly.Cut, y = Ly.Dyn), alpha = 0.45) +
geom_segment(aes(x = 0,y = 0, yend = 0.1, xend = 0.1))+ theme_bw() +
xlab("Cutoff Strategy Loadings SD") + ylab("Dynamic Model Loadings SD")
p5 <- ggplot(data = Pdat2) +
geom_point(aes(x = Ly.Cut, y = Ly.Dyn), alpha = 0.45) +
geom_segment(aes(x = 0,y = 0, yend = 0.1, xend = 0.1))+ theme_bw() +
xlab("Multiple Hurdle Strategy Loadings SD") + ylab("Dynamic Model Loadings SD")
pc <- gridExtra::grid.arrange(p1,p2,p3,p4,p5,nrow = 3)
#Average factor loading table
library(kableExtra)
pdat$Ly
tab1 <- data.frame(aggregate(x = pdat$Ly,list(pdat$percentile),mean),
round(aggregate(x = pdat$p2.5,list(pdat$percentile),mean)$x,2),
round(aggregate(x = pdat$p97.5,list(pdat$percentile),mean)$x,2),
round(aggregate(x=pdat$LYrange,list(pdat$percentile),mean)$x,2))
colnames(tab1) <- c("Model","Mean LY", "Mean LY 2.5", "Mean LY 97.5","Mean Range of 2.5 - 97.5")
tab1$`Mean LY` <- round(tab1$`Mean LY`,2)
tab1 <- data.frame(aggregate(x = pdat$Ly,list(pdat$percentile),mean),
round(aggregate(x = pdat$p2.5,list(pdat$percentile),mean)$x,2),
round(aggregate(x = pdat$p97.5,list(pdat$percentile),mean)$x,2),
round(aggregate(x=pdat$LYrange,list(pdat$percentile),mean)$x,2))
usethis::use_readme_rmd()
library(ReplicationIdentifyingDynamic)
